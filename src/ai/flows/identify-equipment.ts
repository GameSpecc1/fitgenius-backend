// This is an autogenerated file from Firebase Studio.
'use server';
/**
 * @fileOverview Gym equipment identification flow. The flow takes an image
 *   of a piece of gym equipment and returns the name of the equipment
 *   and a tutorial on how to use it.
 *
 * - identifyEquipment - A function that handles the gym equipment identification process.
 * - IdentifyEquipmentInput - The input type for the identifyEquipment function.
 * - IdentifyEquipmentOutput - The return type for the identifyEquipment function.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const IdentifyEquipmentInputSchema = z.object({
  photoDataUri: z
    .string()
    .describe(
      "A photo of a gym equipment, as a data URI that must include a MIME type and use Base64 encoding. Expected format: 'data:<mimetype>;base64,<encoded_data>'."
    ),
});
export type IdentifyEquipmentInput = z.infer<typeof IdentifyEquipmentInputSchema>;

const IdentifyEquipmentOutputSchema = z.object({
  name: z.string().describe('The name of the identified equipment.'),
  tutorial: z.string().describe('A tutorial on how to use the equipment.'),
});
export type IdentifyEquipmentOutput = z.infer<typeof IdentifyEquipmentOutputSchema>;

export async function identifyEquipment(input: IdentifyEquipmentInput): Promise<IdentifyEquipmentOutput> {
  return identifyEquipmentFlow(input);
}

const prompt = ai.definePrompt({
  name: 'identifyEquipmentPrompt',
  input: {schema: IdentifyEquipmentInputSchema},
  output: {schema: IdentifyEquipmentOutputSchema},
  prompt: `You are an expert fitness instructor. You are able to identify the equipment in a gym from a picture, and provide a tutorial on how to use it.

  Identify the equipment from the photo and provide a tutorial on how to use it.

  Photo: {{media url=photoDataUri}}`,
});

const identifyEquipmentFlow = ai.defineFlow(
  {
    name: 'identifyEquipmentFlow',
    inputSchema: IdentifyEquipmentInputSchema,
    outputSchema: IdentifyEquipmentOutputSchema,
  },
  async input => {
    const {output} = await prompt(input);
    return output!;
  }
);
