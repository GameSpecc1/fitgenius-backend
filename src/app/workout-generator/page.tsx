"use client";

import { useState } from "react";
import { useForm } from "react-hook-form";
import { zodResolver } from "@hookform/resolvers/zod";
import * as z from "zod";
import { Dumbbell, Loader2 } from "lucide-react";
import { Button } from "@/components/ui/button";
import {
  Form,
  FormControl,
  FormField,
  FormItem,
  FormLabel,
  FormMessage,
} from "@/components/ui/form";
import { Input } from "@/components/ui/input";
import {
  Select,
  SelectContent,
  SelectItem,
  SelectTrigger,
  SelectValue,
} from "@/components/ui/select";
import { Card, CardContent, CardHeader, CardTitle, CardDescription } from "@/components/ui/card";
import { generateWorkoutPlan } from "@/ai/flows/generate-workout-plan";
import { Skeleton } from "@/components/ui/skeleton";

const formSchema = z.object({
  fitnessGoals: z.string().min(1, "Fitness goals are required."),
  experienceLevel: z.string().min(1, "Experience level is required."),
  availableEquipment: z.string().min(1, "Available equipment is required."),
  workoutDuration: z.string().min(1, "Workout duration is required."),
  workoutFrequency: z.string().min(1, "Workout frequency is required."),
});

export default function WorkoutGeneratorPage() {
  const [workoutPlan, setWorkoutPlan] = useState<string | null>(null);
  const [isLoading, setIsLoading] = useState(false);

  const form = useForm<z.infer<typeof formSchema>>({
    resolver: zodResolver(formSchema),
    defaultValues: {
      fitnessGoals: "",
      experienceLevel: "",
      availableEquipment: "",
      workoutDuration: "",
      workoutFrequency: "",
    },
  });

  async function onSubmit(values: z.infer<typeof formSchema>) {
    setIsLoading(true);
    setWorkoutPlan(null);
    try {
      const result = await generateWorkoutPlan(values);
      setWorkoutPlan(result.workoutPlan);
    } catch (error) {
      console.error("Error generating workout plan:", error);
      setWorkoutPlan("Failed to generate workout plan. Please try again.");
    } finally {
      setIsLoading(false);
    }
  }

  return (
    <div className="space-y-8">
      <header className="space-y-2">
        <h1 className="flex items-center gap-2 text-3xl font-bold tracking-tighter font-headline text-primary">
          <Dumbbell /> Workout Generator
        </h1>
        <p className="text-muted-foreground">
          Fill out the form below to get a personalized workout plan generated by AI.
        </p>
      </header>

      <div className="grid gap-8 md:grid-cols-2">
        <Card>
          <CardHeader>
            <CardTitle>Your Details</CardTitle>
            <CardDescription>
              Provide your details to customize the plan.
            </CardDescription>
          </CardHeader>
          <CardContent>
            <Form {...form}>
              <form onSubmit={form.handleSubmit(onSubmit)} className="space-y-6">
                <FormField
                  control={form.control}
                  name="fitnessGoals"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel>Fitness Goals</FormLabel>
                      <Input placeholder="e.g., Weight loss, muscle gain" {...field} />
                      <FormMessage />
                    </FormItem>
                  )}
                />
                <FormField
                  control={form.control}
                  name="experienceLevel"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel>Experience Level</FormLabel>
                      <Select onValueChange={field.onChange} defaultValue={field.value}>
                        <FormControl>
                          <SelectTrigger>
                            <SelectValue placeholder="Select your experience level" />
                          </SelectTrigger>
                        </FormControl>
                        <SelectContent>
                          <SelectItem value="beginner">Beginner</SelectItem>
                          <SelectItem value="intermediate">Intermediate</SelectItem>
                          <SelectItem value="advanced">Advanced</SelectItem>
                        </SelectContent>
                      </Select>
                      <FormMessage />
                    </FormItem>
                  )}
                />
                 <FormField
                  control={form.control}
                  name="availableEquipment"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel>Available Equipment</FormLabel>
                      <Input placeholder="e.g., Dumbbells, resistance bands, or none" {...field} />
                      <FormMessage />
                    </FormItem>
                  )}
                />
                <FormField
                  control={form.control}
                  name="workoutDuration"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel>Workout Duration (minutes)</FormLabel>
                      <Input placeholder="e.g., 30, 45, 60" type="number" {...field} />
                      <FormMessage />
                    </FormItem>
                  )}
                />
                <FormField
                  control={form.control}
                  name="workoutFrequency"
                  render={({ field }) => (
                    <FormItem>
                      <FormLabel>Workouts per Week</FormLabel>
                      <Input placeholder="e.g., 3, 4, 5" type="number" {...field} />
                      <FormMessage />
                    </FormItem>
                  )}
                />
                <Button type="submit" disabled={isLoading} className="w-full">
                  {isLoading && <Loader2 className="w-4 h-4 mr-2 animate-spin" />}
                  Generate Plan
                </Button>
              </form>
            </Form>
          </CardContent>
        </Card>

        <Card className="flex flex-col">
          <CardHeader>
            <CardTitle>Your Generated Workout Plan</CardTitle>
            <CardDescription>
              Your AI-generated plan will appear here.
            </CardDescription>
          </CardHeader>
          <CardContent className="flex-1">
            {isLoading && (
              <div className="space-y-4">
                <Skeleton className="w-3/4 h-8" />
                <Skeleton className="w-full h-4" />
                <Skeleton className="w-full h-4" />
                <Skeleton className="w-1/2 h-4" />
                 <Skeleton className="w-full h-4" />
                <Skeleton className="w-full h-4" />
              </div>
            )}
            {workoutPlan && (
              <div className="p-4 rounded-lg bg-muted">
                <pre className="text-sm whitespace-pre-wrap font-body">{workoutPlan}</pre>
              </div>
            )}
            {!workoutPlan && !isLoading && (
              <div className="flex items-center justify-center h-full text-center text-muted-foreground">
                <p>Fill in your details and generate a plan to get started.</p>
              </div>
            )}
          </CardContent>
        </Card>
      </div>
    </div>
  );
}
